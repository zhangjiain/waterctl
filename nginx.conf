server {
    listen       80;
    server_name  localhost;

    # 根据反向代理传递的 X-Forwarded-Proto 头动态识别协议
    map $http_x_forwarded_proto $real_scheme {
        default  $scheme;     # 默认使用当前连接协议（HTTP）
        "https"  "https";     # 如果反向代理标记为 HTTPS，则使用 HTTPS
    }

    # 设置响应中的基础 URL 协议（用于前端动态拼接）
    add_header Content-Security-Policy "upgrade-insecure-requests" if=$real_scheme_https;

    #access_log  /var/log/nginx/host.access.log  main;

    resolver 114.114.114.114 8.8.8.8 valid=300s;
    resolver_timeout 5s;

    # 代理路由配置
    location /proxy/ {
        # 根据真实协议设置 CORS 和代理逻辑
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        set $target_url '';
        rewrite_by_lua_file /usr/share/nginx/html/proxy.lua;

        proxy_ssl_server_name on;
        proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

        # 传递真实协议给后端
        proxy_set_header X-Forwarded-Proto $real_scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_redirect off;
        proxy_buffering off;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        proxy_pass $target_url;
    }

    # 静态文件服务（根据协议自动处理资源）
    location / {
        root   /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        index  index.html index.htm;

        # 如果反向代理使用 HTTPS，但请求是 HTTP，则重定向到 HTTPS
        if ($real_scheme = "https") {
            return 301 https://$host$request_uri;
        }
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
