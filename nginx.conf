server {
    listen       80;
    server_name  localhost;

    # 新增协议检测逻辑👇
    map $http_x_forwarded_proto $real_proto {
        default  "http";     # 默认协议
        "https"  "https";    # 当存在反向代理时捕获真实协议
    }

    #access_log  /var/log/nginx/host.access.log  main;

    resolver 114.114.114.114 8.8.8.8 valid=300s;
    resolver_timeout 5s;

    location /proxy/ {
        # 设置CORS头部（保持原样）
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

        # 新增协议响应头👇
        add_header X-Request-Protocol $real_proto;

        # OPTIONS请求处理（保持原样）
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        set $target_url '';
        rewrite_by_lua_file /usr/share/nginx/html/proxy.lua;

        proxy_ssl_server_name on;
        proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

        # 更新代理头传递👇
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $real_proto;  # 使用真实协议

        proxy_redirect off;
        proxy_buffering off;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        proxy_pass $target_url;
    }

    location / {
        root   /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        index  index.html index.htm;

        # 新增协议自动升级👇
        if ($real_proto = "https") {
            add_header Content-Security-Policy "upgrade-insecure-requests";
            # 如果需要强制HTTPS访问可取消注释👇
            # return 301 https://$host$request_uri; 
        }
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
